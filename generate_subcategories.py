import os
import re
from pathlib import Path

def escape_dart_string(s):
    """Escape special characters in a Dart string"""
    # Replace single quotes with escaped single quotes
    # and escape any other special characters
    return s.replace("\\", "\\\\").replace("'", "\\'")

def clean_name(filename):
    """Convert filename to a clean display name"""
    # Remove file extension
    name = os.path.splitext(filename)[0]
    # Replace underscores with spaces and clean up
    return ' '.join(word for word in name.replace('_', ' ').split() if word)

def generate_dart_code(base_dir, output_file):
    """Generate Dart code for subcategories"""
    base_path = Path(base_dir)
    
    # Find all category directories
    categories = [
        d for d in os.listdir(base_path) 
        if os.path.isdir(base_path / d) and not d.startswith('.')
    ]
    
    # Sort categories to maintain consistent order
    categories.sort()
    
    # Map of category directories to their IDs
    category_ids = {cat: str(i+1) for i, cat in enumerate(categories)}
    
    with open(output_file, 'w', encoding='utf-8') as f:
        f.write("// This file is auto-generated by generate_subcategories.py\n")
        f.write("// Run the script to update the subcategories\n")
        f.write("// DO NOT EDIT THIS FILE DIRECTLY\n\n")
        
        for category_dir in categories:
            cat_id = category_ids[category_dir]
            subcategory_dir = base_path / category_dir
            
            # Get all PNG files in the subdirectory
            try:
                png_files = [
                    f for f in os.listdir(subcategory_dir) 
                    if f.lower().endswith('.png')
                ]
            except FileNotFoundError:
                print(f"Warning: Directory not found: {subcategory_dir}")
                continue
                
            if not png_files:
                print(f"Warning: No PNG files found in {subcategory_dir}")
                continue
            
            # Sort files for consistent ordering
            png_files.sort()
            
            # Write the case statement
            category_name = category_dir.replace('_', ' ')
            f.write(f"        case '{cat_id}': // {category_name}\n")
            f.write("          return [\n")
            
            # Write each subcategory
            for i, png_file in enumerate(png_files, 1):
                sub_name = clean_name(png_file)
                
                # Escape special characters in paths and names
                safe_image_path = f"assets/images/subcategoryImages/{category_dir}/{png_file}".replace('\\', '/')
                safe_image_path = escape_dart_string(safe_image_path)
                safe_name = escape_dart_string(sub_name)
                
                f.write("            Subcategory(\n")
                f.write(f"              id: '{cat_id}-{i}',\n")
                f.write(f"              name: '{safe_name}',\n")
                f.write(f"              imagePath: '{safe_image_path}',\n")
                f.write(f"              categoryId: '{cat_id}',\n")
                f.write("            ),\n")
            
            f.write("          ];\n\n")
        
        # Add default case
        f.write("        default:\n")
        f.write("          return [];\n")

if __name__ == "__main__":
    # Set your base directory where subcategory images are stored
    BASE_DIR = Path(__file__).parent / "assets" / "images" / "subcategoryImages"
    OUTPUT_FILE = "subcategories_output.dart"
    
    # If the default path doesn't exist, try an alternative
    if not BASE_DIR.exists():
        BASE_DIR = Path("c:/icar app/icar_instagram_ui/assets/images/subcategoryImages")
    
    try:
        generate_dart_code(BASE_DIR, OUTPUT_FILE)
        print(f"✅ Successfully generated subcategories in {OUTPUT_FILE}")
        print("Please copy the contents to your filter_constants.dart file")
    except Exception as e:
        print(f"❌ Error: {str(e)}")
        print(f"Base directory used: {BASE_DIR}")
        print("Please ensure the directory exists and contains subcategory images")
